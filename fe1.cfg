
MEMORY
{
    ZRAM:   start = $0000, size = $0100, file = "" ;
    WRAM:   start = $0200, size = $0600, file = "" ;
    SRAM:   start = $6000, size = $2000, file = "" ;

    HEADER: start = $0000, size = $0010, file = %O, fill = yes, fillval = $00 ;

    PRG_00: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_01: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_02: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_03: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_04: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_05: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_06: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_07: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_08: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_09: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_0A: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_0B: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_0C: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_0D: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_0E: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    PRG_0F: start = $C000, size = $4000, file = %O, fill = yes, fillval = $FF ;

    CHR_00: start = $0000, size = $1000, file = %O ;
    CHR_01: start = $0000, size = $1000, file = %O ;
    CHR_02: start = $0000, size = $1000, file = %O ;
    CHR_03: start = $0000, size = $1000, file = %O ;
    CHR_04: start = $0000, size = $1000, file = %O ;
    CHR_05: start = $0000, size = $1000, file = %O ;
    CHR_06: start = $0000, size = $1000, file = %O ;
    CHR_07: start = $0000, size = $1000, file = %O ;
    CHR_08: start = $0000, size = $1000, file = %O ;
    CHR_09: start = $0000, size = $1000, file = %O ;
    CHR_0A: start = $0000, size = $1000, file = %O ;
    CHR_0B: start = $0000, size = $1000, file = %O ;
    CHR_0C: start = $0000, size = $1000, file = %O ;
    CHR_0D: start = $0000, size = $1000, file = %O ;
    CHR_0E: start = $0000, size = $1000, file = %O ;
    CHR_0F: start = $0000, size = $1000, file = %O ;
    CHR_10: start = $0000, size = $1000, file = %O ;
    CHR_11: start = $0000, size = $1000, file = %O ;
    CHR_12: start = $0000, size = $1000, file = %O ;
    CHR_13: start = $0000, size = $1000, file = %O ;
    CHR_14: start = $0000, size = $1000, file = %O ;
    CHR_15: start = $0000, size = $1000, file = %O ;
    CHR_16: start = $0000, size = $1000, file = %O ;
    CHR_17: start = $0000, size = $1000, file = %O ;
    CHR_18: start = $0000, size = $1000, file = %O ;
    CHR_19: start = $0000, size = $1000, file = %O ;
    CHR_1A: start = $0000, size = $1000, file = %O ;
    CHR_1B: start = $0000, size = $1000, file = %O ;
    CHR_1C: start = $0000, size = $1000, file = %O ;
    CHR_1D: start = $0000, size = $1000, file = %O ;
    CHR_1E: start = $0000, size = $1000, file = %O ;
    CHR_1F: start = $0000, size = $1000, file = %O ;
}

SEGMENTS
{
    HEADER: load = HEADER, type = ro ;

    HOME:         load = PRG_0F, type = ro ;
    DATA_0F_F807: load = PRG_0F, start = $F807, type = ro ;
    HOME_FARINFO: load = PRG_0F, start = $FFA0, type = ro ;
    VECTORS:      load = PRG_0F, start = $FFFA, type = ro ;

    PRG_00: load = PRG_00, type = ro ;
    PRG_01: load = PRG_01, type = ro ;
    PRG_02: load = PRG_02, type = ro ;
    PRG_03: load = PRG_03, type = ro ;
    PRG_04: load = PRG_04, type = ro ;
    PRG_05: load = PRG_05, type = ro ;
    PRG_06: load = PRG_06, type = ro ;
    PRG_07: load = PRG_07, type = ro ;
    PRG_08: load = PRG_08, type = ro ;
    PRG_09: load = PRG_09, type = ro ;
    PRG_0A: load = PRG_0A, type = ro ;
    PRG_0B: load = PRG_0B, type = ro ;
    PRG_0C: load = PRG_0C, type = ro ;
    PRG_0D: load = PRG_0D, type = ro ;
    PRG_0E: load = PRG_0E, type = ro ;

    CHR_00: load = CHR_00, type = ro ;
    CHR_01: load = CHR_01, type = ro ;
    CHR_02: load = CHR_02, type = ro ;
    CHR_03: load = CHR_03, type = ro ;
    CHR_04: load = CHR_04, type = ro ;
    CHR_05: load = CHR_05, type = ro ;
    CHR_06: load = CHR_06, type = ro ;
    CHR_07: load = CHR_07, type = ro ;
    CHR_08: load = CHR_08, type = ro ;
    CHR_09: load = CHR_09, type = ro ;
    CHR_0A: load = CHR_0A, type = ro ;
    CHR_0B: load = CHR_0B, type = ro ;
    CHR_0C: load = CHR_0C, type = ro ;
    CHR_0D: load = CHR_0D, type = ro ;
    CHR_0E: load = CHR_0E, type = ro ;
    CHR_0F: load = CHR_0F, type = ro ;
    CHR_10: load = CHR_10, type = ro ;
    CHR_11: load = CHR_11, type = ro ;
    CHR_12: load = CHR_12, type = ro ;
    CHR_13: load = CHR_13, type = ro ;
    CHR_14: load = CHR_14, type = ro ;
    CHR_15: load = CHR_15, type = ro ;
    CHR_16: load = CHR_16, type = ro ;
    CHR_17: load = CHR_17, type = ro ;
    CHR_18: load = CHR_18, type = ro ;
    CHR_19: load = CHR_19, type = ro ;
    CHR_1A: load = CHR_1A, type = ro ;
    CHR_1B: load = CHR_1B, type = ro ;
    CHR_1C: load = CHR_1C, type = ro ;
    CHR_1D: load = CHR_1D, type = ro ;
    CHR_1E: load = CHR_1E, type = ro ;
    CHR_1F: load = CHR_1F, type = ro ;
}
